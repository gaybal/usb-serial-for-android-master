com.android.usbport.ModbusTransfer -> com.android.usbport.ModbusTransfer:
    com.android.usbport.ModbusTransfer mInstance -> mInstance
    8:8:void <init>() -> <init>
    13:15:com.android.usbport.ModbusTransfer getInstance(android.content.Context) -> getInstance
    byte[] sendCmdToPlc(com.android.usbport.USBDevice,int,byte[],byte[]) -> sendCmdToPlc
    byte[] sendCmdToPlc(int,byte[],byte[]) -> sendCmdToPlc
    byte[] readDataFromPlc(com.android.usbport.USBDevice,int,byte[],int,int) -> readDataFromPlc
    byte[] readDataFromPlc(int,byte[],int,int) -> readDataFromPlc
    10:10:void <clinit>() -> <clinit>
com.android.usbport.ModbusTransferImpl -> com.android.usbport.a:
    java.lang.String TAG -> a
    android.content.Context mContext -> a
    boolean D -> a
    byte[] STATIC -> a
    int WRITE_TIMEOUT -> a
    21:26:void <init>(android.content.Context) -> <init>
    30:101:byte[] sendCmdToPlc(com.android.usbport.USBDevice,int,byte[],byte[]) -> sendCmdToPlc
    106:170:byte[] sendCmdToPlc(int,byte[],byte[]) -> sendCmdToPlc
    175:251:byte[] readDataFromPlc(int,byte[],int,int) -> readDataFromPlc
    257:337:byte[] readDataFromPlc(com.android.usbport.USBDevice,int,byte[],int,int) -> readDataFromPlc
    348:371:byte[] crc_16(byte[],int) -> a
    17:17:void <clinit>() -> <clinit>
com.android.usbport.USBDevice -> com.android.usbport.USBDevice:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    java.lang.String comName -> comName
    boolean isUsbOpen -> isUsbOpen
    com.hoho.android.usbserial.driver.UsbSerialPort sPort -> sPort
    com.android.usbport.USBParams params -> params
    android.hardware.usb.UsbManager mUsbManager -> mUsbManager
    byte[] STATIC -> STATIC
    22:34:void <init>(android.content.Context,java.lang.String,com.hoho.android.usbserial.driver.UsbSerialPort) -> <init>
    38:38:java.lang.String toString() -> toString
    49:52:boolean openUsbPort() -> openUsbPort
    63:109:boolean openUsbPort(com.android.usbport.USBParams) -> openUsbPort
    116:125:void destoryPort() -> destoryPort
    135:151:int write(byte[],int) -> write
    162:178:int read(byte[],int) -> read
    182:188:void setDTR(boolean) -> setDTR
    191:197:void setRTS(boolean) -> setRTS
    204:204:boolean isUsbOpen() -> isUsbOpen
    212:213:void setParams(com.android.usbport.USBParams) -> setParams
    220:220:com.hoho.android.usbserial.driver.UsbSerialPort getUsbPort() -> getUsbPort
    19:20:void <clinit>() -> <clinit>
com.android.usbport.USBManager -> com.android.usbport.USBManager:
    java.lang.String TAG -> TAG
    com.android.usbport.USBManager mInstance -> mInstance
    15:15:void <init>() -> <init>
    21:23:com.android.usbport.USBManager getInstance(android.content.Context) -> getInstance
    java.util.List listUsbDevices() -> listUsbDevices
    java.util.List listUsbPort() -> listUsbPort
    boolean openUsbPort(com.hoho.android.usbserial.driver.UsbSerialPort) -> openUsbPort
    boolean openUsbPort(com.hoho.android.usbserial.driver.UsbSerialPort,com.android.usbport.USBParams) -> openUsbPort
    void destoryPort() -> destoryPort
    int write(byte[],int) -> write
    int read(byte[],int) -> read
    void setDTR(boolean) -> setDTR
    void setRTS(boolean) -> setRTS
    void setOnInputListener(com.hoho.android.usbserial.util.SerialInputOutputManager$Listener) -> setOnInputListener
    void writeDataToUsb(byte[]) -> writeDataToUsb
    17:18:void <clinit>() -> <clinit>
com.android.usbport.USBManagerImpl -> com.android.usbport.b:
    java.lang.String TAG -> a
    android.content.Context mContext -> a
    com.android.usbport.USBManagerImpl mInstance -> a
    boolean isUsbOpen -> a
    java.util.concurrent.ExecutorService mExecutor -> a
    android.hardware.usb.UsbManager mUsbManager -> a
    com.hoho.android.usbserial.driver.UsbSerialPort sPort -> a
    com.hoho.android.usbserial.util.SerialInputOutputManager mSerialIoManager -> a
    com.hoho.android.usbserial.util.SerialInputOutputManager$Listener mListener -> a
    byte[] STATIC -> a
    34:48:void <init>(android.content.Context) -> <init>
    59:83:java.util.List listUsbDevices() -> listUsbDevices
    95:113:java.util.List listUsbPort() -> listUsbPort
    126:126:boolean openUsbPort(com.hoho.android.usbserial.driver.UsbSerialPort) -> openUsbPort
    139:181:boolean openUsbPort(com.hoho.android.usbserial.driver.UsbSerialPort,com.android.usbport.USBParams) -> openUsbPort
    189:199:void destoryPort() -> destoryPort
    210:226:int write(byte[],int) -> write
    238:254:int read(byte[],int) -> read
    259:265:void setDTR(boolean) -> setDTR
    269:275:void setRTS(boolean) -> setRTS
    280:290:void writeDataToUsb(byte[]) -> writeDataToUsb
    294:296:void setOnInputListener(com.hoho.android.usbserial.util.SerialInputOutputManager$Listener) -> setOnInputListener
    299:301:void onDeviceStateChange() -> a
    304:309:void stopIoManager() -> b
    312:317:void startIoManager() -> c
    30:38:void <clinit>() -> <clinit>
com.android.usbport.USBParams -> com.android.usbport.USBParams:
    int baudrate -> baudrate
    int dataBits -> dataBits
    int stopBits -> stopBits
    int parity -> parity
    13:29:void <init>() -> <init>
    33:33:java.lang.String toString() -> toString
com.hoho.android.usbserial.driver.CdcAcmSerialDriver -> com.hoho.android.usbserial.driver.CdcAcmSerialDriver:
    java.lang.String TAG -> TAG
    android.hardware.usb.UsbDevice mDevice -> mDevice
    com.hoho.android.usbserial.driver.UsbSerialPort mPort -> mPort
    50:58:void <init>(android.hardware.usb.UsbDevice) -> <init>
    62:62:android.hardware.usb.UsbDevice getDevice() -> getDevice
    67:67:java.util.List getPorts() -> getPorts
    403:429:java.util.Map getSupportedDevices() -> getSupportedDevices
    48:48:java.lang.String access$000(com.hoho.android.usbserial.driver.CdcAcmSerialDriver) -> access$000
com.hoho.android.usbserial.driver.CdcAcmSerialDriver$CdcAcmSerialPort -> com.hoho.android.usbserial.driver.CdcAcmSerialDriver$a:
    boolean mEnableAsyncReads -> a
    android.hardware.usb.UsbInterface mControlInterface -> a
    android.hardware.usb.UsbInterface mDataInterface -> b
    android.hardware.usb.UsbEndpoint mControlEndpoint -> a
    android.hardware.usb.UsbEndpoint mReadEndpoint -> b
    android.hardware.usb.UsbEndpoint mWriteEndpoint -> c
    boolean mRts -> b
    boolean mDtr -> c
    int USB_RECIP_INTERFACE -> d
    int USB_RT_ACM -> e
    int SET_LINE_CODING -> f
    int GET_LINE_CODING -> g
    int SET_CONTROL_LINE_STATE -> h
    int SEND_BREAK -> i
    com.hoho.android.usbserial.driver.CdcAcmSerialDriver this$0 -> a
    80:94:void <init>(com.hoho.android.usbserial.driver.CdcAcmSerialDriver,android.hardware.usb.UsbDevice,int) -> <init>
    98:98:com.hoho.android.usbserial.driver.UsbSerialDriver getDriver() -> getDriver
    103:136:void open(android.hardware.usb.UsbDeviceConnection) -> open
    142:194:void openSingleInterface() -> a
    197:222:void openInterface() -> b
    225:225:int sendAcmControlMessage(int,int,byte[]) -> a
    231:236:void close() -> close
    240:284:int read(byte[],int) -> read
    290:319:int write(byte[],int) -> write
    325:351:void setParameters(int,int,int,int) -> setParameters
    355:355:boolean getCD() -> getCD
    360:360:boolean getCTS() -> getCTS
    365:365:boolean getDSR() -> getDSR
    370:370:boolean getDTR() -> getDTR
    375:377:void setDTR(boolean) -> setDTR
    381:381:boolean getRI() -> getRI
    386:386:boolean getRTS() -> getRTS
    391:393:void setRTS(boolean) -> setRTS
    396:398:void setDtrRts() -> c
com.hoho.android.usbserial.driver.Ch34xSerialDriver -> com.hoho.android.usbserial.driver.Ch34xSerialDriver:
    java.lang.String TAG -> TAG
    android.hardware.usb.UsbDevice mDevice -> mDevice
    com.hoho.android.usbserial.driver.UsbSerialPort mPort -> mPort
    49:52:void <init>(android.hardware.usb.UsbDevice) -> <init>
    56:56:android.hardware.usb.UsbDevice getDevice() -> getDevice
    61:61:java.util.List getPorts() -> getPorts
    356:360:java.util.Map getSupportedDevices() -> getSupportedDevices
    42:42:java.lang.String access$000() -> access$000
    44:44:void <clinit>() -> <clinit>
com.hoho.android.usbserial.driver.Ch34xSerialDriver$Ch340SerialPort -> com.hoho.android.usbserial.driver.Ch34xSerialDriver$a:
    int USB_TIMEOUT_MILLIS -> d
    int DEFAULT_BAUD_RATE -> e
    boolean dtr -> a
    boolean rts -> b
    android.hardware.usb.UsbEndpoint mReadEndpoint -> a
    android.hardware.usb.UsbEndpoint mWriteEndpoint -> b
    com.hoho.android.usbserial.driver.Ch34xSerialDriver this$0 -> a
    68:78:void <init>(com.hoho.android.usbserial.driver.Ch34xSerialDriver,android.hardware.usb.UsbDevice,int) -> <init>
    82:82:com.hoho.android.usbserial.driver.UsbSerialDriver getDriver() -> getDriver
    87:129:void open(android.hardware.usb.UsbDeviceConnection) -> open
    133:144:void close() -> close
    150:163:int read(byte[],int) -> read
    168:197:int write(byte[],int) -> write
    201:202:int controlOut(int,int,int) -> a
    208:209:int controlIn(int,int,int,byte[]) -> a
    215:236:void checkState(java.lang.String,int,int,int[]) -> a
    239:242:void writeHandshakeByte() -> a
    245:270:void initialize() -> b
    274:294:void setBaudRate(int) -> c
    301:304:void setParameters(int,int,int,int) -> setParameters
    308:308:boolean getCD() -> getCD
    313:313:boolean getCTS() -> getCTS
    318:318:boolean getDSR() -> getDSR
    323:323:boolean getDTR() -> getDTR
    328:330:void setDTR(boolean) -> setDTR
    334:334:boolean getRI() -> getRI
    339:339:boolean getRTS() -> getRTS
    344:346:void setRTS(boolean) -> setRTS
    350:350:boolean purgeHwBuffers(boolean,boolean) -> purgeHwBuffers
    64:64:java.lang.String getSerial() -> getSerial
    64:64:int getPortNumber() -> getPortNumber
    64:64:java.lang.String toString() -> toString
com.hoho.android.usbserial.driver.CommonUsbSerialPort -> com.hoho.android.usbserial.driver.a:
    int DEFAULT_READ_BUFFER_SIZE -> a
    int DEFAULT_WRITE_BUFFER_SIZE -> b
    android.hardware.usb.UsbDevice mDevice -> a
    int mPortNumber -> c
    android.hardware.usb.UsbDeviceConnection mConnection -> a
    java.lang.Object mReadBufferLock -> a
    java.lang.Object mWriteBufferLock -> b
    byte[] mReadBuffer -> a
    byte[] mWriteBuffer -> b
    43:60:void <init>(android.hardware.usb.UsbDevice,int) -> <init>
    64:66:java.lang.String toString() -> toString
    75:75:android.hardware.usb.UsbDevice getDevice() -> a
    80:80:int getPortNumber() -> getPortNumber
    89:89:java.lang.String getSerial() -> getSerial
    99:105:void setReadBufferSize(int) -> a
    114:120:void setWriteBufferSize(int) -> b
    void open(android.hardware.usb.UsbDeviceConnection) -> open
    void close() -> close
    int read(byte[],int) -> read
    int write(byte[],int) -> write
    void setParameters(int,int,int,int) -> setParameters
    boolean getCD() -> getCD
    boolean getCTS() -> getCTS
    boolean getDSR() -> getDSR
    boolean getDTR() -> getDTR
    void setDTR(boolean) -> setDTR
    boolean getRI() -> getRI
    boolean getRTS() -> getRTS
    void setRTS(boolean) -> setRTS
    164:164:boolean purgeHwBuffers(boolean,boolean) -> purgeHwBuffers
com.hoho.android.usbserial.driver.Cp21xxSerialDriver -> com.hoho.android.usbserial.driver.Cp21xxSerialDriver:
    java.lang.String TAG -> TAG
    android.hardware.usb.UsbDevice mDevice -> mDevice
    com.hoho.android.usbserial.driver.UsbSerialPort mPort -> mPort
    44:47:void <init>(android.hardware.usb.UsbDevice) -> <init>
    51:51:android.hardware.usb.UsbDevice getDevice() -> getDevice
    56:56:java.util.List getPorts() -> getPorts
    345:353:java.util.Map getSupportedDevices() -> getSupportedDevices
    37:37:java.lang.String access$000() -> access$000
    39:39:void <clinit>() -> <clinit>
com.hoho.android.usbserial.driver.Cp21xxSerialDriver$Cp21xxSerialPort -> com.hoho.android.usbserial.driver.Cp21xxSerialDriver$a:
    int DEFAULT_BAUD_RATE -> d
    int USB_WRITE_TIMEOUT_MILLIS -> e
    int REQTYPE_HOST_TO_DEVICE -> f
    int SILABSER_IFC_ENABLE_REQUEST_CODE -> g
    int SILABSER_SET_BAUDDIV_REQUEST_CODE -> h
    int SILABSER_SET_LINE_CTL_REQUEST_CODE -> i
    int SILABSER_SET_MHS_REQUEST_CODE -> j
    int SILABSER_SET_BAUDRATE -> k
    int SILABSER_FLUSH_REQUEST_CODE -> l
    int FLUSH_READ_CODE -> m
    int FLUSH_WRITE_CODE -> n
    int UART_ENABLE -> o
    int UART_DISABLE -> p
    int BAUD_RATE_GEN_FREQ -> q
    int MCR_DTR -> r
    int MCR_RTS -> s
    int MCR_ALL -> t
    int CONTROL_WRITE_DTR -> u
    int CONTROL_WRITE_RTS -> v
    android.hardware.usb.UsbEndpoint mReadEndpoint -> a
    android.hardware.usb.UsbEndpoint mWriteEndpoint -> b
    com.hoho.android.usbserial.driver.Cp21xxSerialDriver this$0 -> a
    107:109:void <init>(com.hoho.android.usbserial.driver.Cp21xxSerialDriver,android.hardware.usb.UsbDevice,int) -> <init>
    113:113:com.hoho.android.usbserial.driver.UsbSerialDriver getDriver() -> getDriver
    117:117:int setConfigSingle(int,int) -> a
    123:165:void open(android.hardware.usb.UsbDeviceConnection) -> open
    169:178:void close() -> close
    183:196:int read(byte[],int) -> read
    201:230:int write(byte[],int) -> write
    234:245:void setBaudRate(int) -> c
    250:289:void setParameters(int,int,int,int) -> setParameters
    293:293:boolean getCD() -> getCD
    298:298:boolean getCTS() -> getCTS
    303:303:boolean getDSR() -> getDSR
    308:308:boolean getDTR() -> getDTR
    313:313:void setDTR(boolean) -> setDTR
    317:317:boolean getRI() -> getRI
    322:322:boolean getRTS() -> getRTS
    327:327:void setRTS(boolean) -> setRTS
    332:339:boolean purgeHwBuffers(boolean,boolean) -> purgeHwBuffers
    59:59:java.lang.String getSerial() -> getSerial
    59:59:int getPortNumber() -> getPortNumber
    59:59:java.lang.String toString() -> toString
com.hoho.android.usbserial.driver.FtdiSerialDriver -> com.hoho.android.usbserial.driver.FtdiSerialDriver:
    android.hardware.usb.UsbDevice mDevice -> mDevice
    com.hoho.android.usbserial.driver.UsbSerialPort mPort -> mPort
    107:110:void <init>(android.hardware.usb.UsbDevice) -> <init>
    113:113:android.hardware.usb.UsbDevice getDevice() -> getDevice
    118:118:java.util.List getPorts() -> getPorts
    572:578:java.util.Map getSupportedDevices() -> getSupportedDevices
com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType -> com.hoho.android.usbserial.driver.FtdiSerialDriver$a:
    com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType TYPE_BM -> a
    com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType TYPE_AM -> b
    com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType TYPE_2232C -> c
    com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType TYPE_R -> d
    com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType TYPE_2232H -> e
    com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType TYPE_4232H -> f
    com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType[] $VALUES -> a
    103:103:com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType[] values() -> a
    103:103:com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType valueOf(java.lang.String) -> a
    103:103:void <init>(java.lang.String,int) -> <init>
    103:104:void <clinit>() -> <clinit>
com.hoho.android.usbserial.driver.FtdiSerialDriver$FtdiSerialPort -> com.hoho.android.usbserial.driver.FtdiSerialDriver$b:
    int USB_TYPE_STANDARD -> d
    int USB_TYPE_CLASS -> e
    int USB_TYPE_VENDOR -> f
    int USB_TYPE_RESERVED -> g
    int USB_RECIP_DEVICE -> h
    int USB_RECIP_INTERFACE -> i
    int USB_RECIP_ENDPOINT -> j
    int USB_RECIP_OTHER -> k
    int USB_ENDPOINT_IN -> l
    int USB_ENDPOINT_OUT -> m
    int USB_WRITE_TIMEOUT_MILLIS -> n
    int USB_READ_TIMEOUT_MILLIS -> o
    int SIO_RESET_REQUEST -> r
    int SIO_MODEM_CTRL_REQUEST -> s
    int SIO_SET_FLOW_CTRL_REQUEST -> t
    int SIO_SET_BAUD_RATE_REQUEST -> u
    int SIO_SET_DATA_REQUEST -> v
    int SIO_RESET_SIO -> w
    int SIO_RESET_PURGE_RX -> x
    int SIO_RESET_PURGE_TX -> y
    int FTDI_DEVICE_OUT_REQTYPE -> p
    int FTDI_DEVICE_IN_REQTYPE -> q
    int MODEM_STATUS_HEADER_LENGTH -> z
    java.lang.String TAG -> a
    com.hoho.android.usbserial.driver.FtdiSerialDriver$DeviceType mType -> a
    int mInterface -> A
    int mMaxPacketSize -> B
    boolean ENABLE_ASYNC_READS -> a
    com.hoho.android.usbserial.driver.FtdiSerialDriver this$0 -> a
    180:197:void <init>(com.hoho.android.usbserial.driver.FtdiSerialDriver,android.hardware.usb.UsbDevice,int) -> <init>
    201:201:com.hoho.android.usbserial.driver.UsbSerialDriver getDriver() -> getDriver
    213:227:int filterStatusBytes(byte[],byte[],int,int) -> a
    231:239:void reset() -> a
    243:265:void open(android.hardware.usb.UsbDeviceConnection) -> open
    269:277:void close() -> close
    281:323:int read(byte[],int) -> read
    329:360:int write(byte[],int) -> write
    364:374:int setBaudRate(int) -> a
    380:424:void setParameters(int,int,int,int) -> setParameters
    429:507:long[] convertBaudrate(int) -> a
    514:514:boolean getCD() -> getCD
    519:519:boolean getCTS() -> getCTS
    524:524:boolean getDSR() -> getDSR
    529:529:boolean getDTR() -> getDTR
    534:534:void setDTR(boolean) -> setDTR
    538:538:boolean getRI() -> getRI
    543:543:boolean getRTS() -> getRTS
    548:548:void setRTS(boolean) -> setRTS
    552:567:boolean purgeHwBuffers(boolean,boolean) -> purgeHwBuffers
com.hoho.android.usbserial.driver.ProbeTable -> com.hoho.android.usbserial.driver.ProbeTable:
    java.util.Map mProbeTable -> mProbeTable
    36:38:void <init>() -> <init>
    51:52:com.hoho.android.usbserial.driver.ProbeTable addProduct(int,int,java.lang.Class) -> addProduct
    67:92:com.hoho.android.usbserial.driver.ProbeTable addDriver(java.lang.Class) -> addDriver
    104:105:java.lang.Class findDriver(int,int) -> findDriver
com.hoho.android.usbserial.driver.ProlificSerialDriver -> com.hoho.android.usbserial.driver.ProlificSerialDriver:
    java.lang.String TAG -> TAG
    android.hardware.usb.UsbDevice mDevice -> mDevice
    com.hoho.android.usbserial.driver.UsbSerialPort mPort -> mPort
    46:54:void <init>(android.hardware.usb.UsbDevice) -> <init>
    58:58:java.util.List getPorts() -> getPorts
    63:63:android.hardware.usb.UsbDevice getDevice() -> getDevice
    555:558:java.util.Map getSupportedDevices() -> getSupportedDevices
    44:44:java.lang.String access$000(com.hoho.android.usbserial.driver.ProlificSerialDriver) -> access$000
com.hoho.android.usbserial.driver.ProlificSerialDriver$ProlificSerialPort -> com.hoho.android.usbserial.driver.ProlificSerialDriver$a:
    int USB_READ_TIMEOUT_MILLIS -> d
    int USB_WRITE_TIMEOUT_MILLIS -> e
    int USB_RECIP_INTERFACE -> f
    int PROLIFIC_VENDOR_READ_REQUEST -> g
    int PROLIFIC_VENDOR_WRITE_REQUEST -> h
    int PROLIFIC_VENDOR_OUT_REQTYPE -> i
    int PROLIFIC_VENDOR_IN_REQTYPE -> j
    int PROLIFIC_CTRL_OUT_REQTYPE -> k
    int WRITE_ENDPOINT -> l
    int READ_ENDPOINT -> m
    int INTERRUPT_ENDPOINT -> n
    int FLUSH_RX_REQUEST -> o
    int FLUSH_TX_REQUEST -> p
    int SET_LINE_REQUEST -> q
    int SET_CONTROL_REQUEST -> r
    int CONTROL_DTR -> s
    int CONTROL_RTS -> t
    int STATUS_FLAG_CD -> u
    int STATUS_FLAG_DSR -> v
    int STATUS_FLAG_RI -> w
    int STATUS_FLAG_CTS -> x
    int STATUS_BUFFER_SIZE -> y
    int STATUS_BYTE_IDX -> z
    int DEVICE_TYPE_HX -> A
    int DEVICE_TYPE_0 -> B
    int DEVICE_TYPE_1 -> C
    int mDeviceType -> D
    android.hardware.usb.UsbEndpoint mReadEndpoint -> a
    android.hardware.usb.UsbEndpoint mWriteEndpoint -> b
    android.hardware.usb.UsbEndpoint mInterruptEndpoint -> c
    int mControlLinesValue -> E
    int mBaudRate -> F
    int mDataBits -> G
    int mStopBits -> H
    int mParity -> I
    int mStatus -> J
    java.lang.Thread mReadStatusThread -> a
    java.lang.Object mReadStatusThreadLock -> c
    boolean mStopReadStatusThread -> a
    java.io.IOException mReadStatusException -> a
    com.hoho.android.usbserial.driver.ProlificSerialDriver this$0 -> a
    110:129:void <init>(com.hoho.android.usbserial.driver.ProlificSerialDriver,android.hardware.usb.UsbDevice,int) -> <init>
    133:133:com.hoho.android.usbserial.driver.UsbSerialDriver getDriver() -> getDriver
    138:146:byte[] inControlTransfer(int,int,int,int,int) -> a
    151:159:void outControlTransfer(int,int,int,int,byte[]) -> a
    163:163:byte[] vendorIn(int,int,int) -> a
    169:171:void vendorOut(int,int,byte[]) -> a
    174:175:void resetDevice() -> a
    179:181:void ctrlOut(int,int,int,byte[]) -> a
    184:195:void doBlackMagic() -> b
    198:200:void setControlLines(int) -> c
    204:224:void readStatusThreadFunction() -> c
    227:260:int getStatus() -> a
    264:264:boolean testStatusFlag(int) -> a
    269:341:void open(android.hardware.usb.UsbDeviceConnection) -> open
    345:367:void close() -> close
    371:380:int read(byte[],int) -> read
    385:415:int write(byte[],int) -> write
    421:486:void setParameters(int,int,int,int) -> setParameters
    490:490:boolean getCD() -> getCD
    495:495:boolean getCTS() -> getCTS
    500:500:boolean getDSR() -> getDSR
    505:505:boolean getDTR() -> getDTR
    511:517:void setDTR(boolean) -> setDTR
    521:521:boolean getRI() -> getRI
    526:526:boolean getRTS() -> getRTS
    532:538:void setRTS(boolean) -> setRTS
    542:550:boolean purgeHwBuffers(boolean,boolean) -> purgeHwBuffers
    66:66:void access$100(com.hoho.android.usbserial.driver.ProlificSerialDriver$ProlificSerialPort) -> a
com.hoho.android.usbserial.driver.ProlificSerialDriver$ProlificSerialPort$1 -> com.hoho.android.usbserial.driver.ProlificSerialDriver$a$1:
    com.hoho.android.usbserial.driver.ProlificSerialDriver$ProlificSerialPort this$1 -> a
    241:241:void <init>(com.hoho.android.usbserial.driver.ProlificSerialDriver$ProlificSerialPort) -> <init>
    244:245:void run() -> run
com.hoho.android.usbserial.driver.UsbId -> com.hoho.android.usbserial.driver.b:
    int VENDOR_FTDI -> a
    int FTDI_FT232R -> b
    int FTDI_FT231X -> c
    int VENDOR_ATMEL -> d
    int ATMEL_LUFA_CDC_DEMO_APP -> e
    int VENDOR_ARDUINO -> f
    int ARDUINO_UNO -> g
    int ARDUINO_MEGA_2560 -> h
    int ARDUINO_SERIAL_ADAPTER -> i
    int ARDUINO_MEGA_ADK -> j
    int ARDUINO_MEGA_2560_R3 -> k
    int ARDUINO_UNO_R3 -> l
    int ARDUINO_MEGA_ADK_R3 -> m
    int ARDUINO_SERIAL_ADAPTER_R3 -> n
    int ARDUINO_LEONARDO -> o
    int ARDUINO_MICRO -> p
    int VENDOR_VAN_OOIJEN_TECH -> q
    int VAN_OOIJEN_TECH_TEENSYDUINO_SERIAL -> r
    int VENDOR_LEAFLABS -> s
    int LEAFLABS_MAPLE -> t
    int VENDOR_SILABS -> u
    int SILABS_CP2102 -> v
    int SILABS_CP2105 -> w
    int SILABS_CP2108 -> x
    int SILABS_CP2110 -> y
    int VENDOR_PROLIFIC -> z
    int PROLIFIC_PL2303 -> A
    int VENDOR_QINHENG -> B
    int QINHENG_HL340 -> C
    71:72:void <init>() -> <init>
com.hoho.android.usbserial.driver.UsbSerialDriver -> com.hoho.android.usbserial.driver.UsbSerialDriver:
    android.hardware.usb.UsbDevice getDevice() -> getDevice
    java.util.List getPorts() -> getPorts
com.hoho.android.usbserial.driver.UsbSerialPort -> com.hoho.android.usbserial.driver.UsbSerialPort:
    int DATABITS_5 -> DATABITS_5
    int DATABITS_6 -> DATABITS_6
    int DATABITS_7 -> DATABITS_7
    int DATABITS_8 -> DATABITS_8
    int FLOWCONTROL_NONE -> FLOWCONTROL_NONE
    int FLOWCONTROL_RTSCTS_IN -> FLOWCONTROL_RTSCTS_IN
    int FLOWCONTROL_RTSCTS_OUT -> FLOWCONTROL_RTSCTS_OUT
    int FLOWCONTROL_XONXOFF_IN -> FLOWCONTROL_XONXOFF_IN
    int FLOWCONTROL_XONXOFF_OUT -> FLOWCONTROL_XONXOFF_OUT
    int PARITY_NONE -> PARITY_NONE
    int PARITY_ODD -> PARITY_ODD
    int PARITY_EVEN -> PARITY_EVEN
    int PARITY_MARK -> PARITY_MARK
    int PARITY_SPACE -> PARITY_SPACE
    int STOPBITS_1 -> STOPBITS_1
    int STOPBITS_1_5 -> STOPBITS_1_5
    int STOPBITS_2 -> STOPBITS_2
    com.hoho.android.usbserial.driver.UsbSerialDriver getDriver() -> getDriver
    int getPortNumber() -> getPortNumber
    java.lang.String getSerial() -> getSerial
    void open(android.hardware.usb.UsbDeviceConnection) -> open
    void close() -> close
    int read(byte[],int) -> read
    int write(byte[],int) -> write
    void setParameters(int,int,int,int) -> setParameters
    boolean getCD() -> getCD
    boolean getCTS() -> getCTS
    boolean getDSR() -> getDSR
    boolean getDTR() -> getDTR
    void setDTR(boolean) -> setDTR
    boolean getRI() -> getRI
    boolean getRTS() -> getRTS
    void setRTS(boolean) -> setRTS
    boolean purgeHwBuffers(boolean,boolean) -> purgeHwBuffers
com.hoho.android.usbserial.driver.UsbSerialProber -> com.hoho.android.usbserial.driver.UsbSerialProber:
    com.hoho.android.usbserial.driver.ProbeTable mProbeTable -> mProbeTable
    40:42:void <init>(com.hoho.android.usbserial.driver.ProbeTable) -> <init>
    45:45:com.hoho.android.usbserial.driver.UsbSerialProber getDefaultProber() -> getDefaultProber
    49:55:com.hoho.android.usbserial.driver.ProbeTable getDefaultProbeTable() -> getDefaultProbeTable
    68:76:java.util.List findAllDrivers(android.hardware.usb.UsbManager) -> findAllDrivers
    87:111:com.hoho.android.usbserial.driver.UsbSerialDriver probeDevice(android.hardware.usb.UsbDevice) -> probeDevice
com.hoho.android.usbserial.driver.UsbSerialRuntimeException -> com.hoho.android.usbserial.driver.c:
    31:32:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    39:40:void <init>(java.lang.String) -> <init>
    43:44:void <init>(java.lang.Throwable) -> <init>
com.hoho.android.usbserial.util.HexDump -> com.hoho.android.usbserial.util.a:
    char[] HEX_DIGITS -> a
    23:23:void <init>() -> <init>
    29:29:java.lang.String dumpHexString(byte[]) -> a
    33:82:java.lang.String dumpHexString(byte[],int,int) -> a
    86:86:java.lang.String toHexString(byte) -> a
    90:90:java.lang.String toHexString(byte[]) -> b
    94:103:java.lang.String toHexString(byte[],int,int) -> b
    107:107:java.lang.String toHexString(int) -> a
    111:111:java.lang.String toHexString(short) -> a
    115:117:byte[] toByteArray(byte) -> a
    121:128:byte[] toByteArray(int) -> a
    132:137:byte[] toByteArray(short) -> a
    141:148:int toByte(char) -> a
    152:160:byte[] hexStringToByteArray(java.lang.String) -> a
    24:24:void <clinit>() -> <clinit>
com.hoho.android.usbserial.util.SerialInputOutputManager -> com.hoho.android.usbserial.util.SerialInputOutputManager:
    java.lang.String TAG -> a
    boolean DEBUG -> a
    int READ_WAIT_MILLIS -> a
    int BUFSIZ -> b
    com.hoho.android.usbserial.driver.UsbSerialPort mDriver -> a
    java.nio.ByteBuffer mReadBuffer -> a
    java.nio.ByteBuffer mWriteBuffer -> b
    com.hoho.android.usbserial.util.SerialInputOutputManager$State mState -> a
    com.hoho.android.usbserial.util.SerialInputOutputManager$Listener mListener -> a
    82:83:void <init>(com.hoho.android.usbserial.driver.UsbSerialPort) -> <init>
    48:91:void <init>(com.hoho.android.usbserial.driver.UsbSerialPort,com.hoho.android.usbserial.util.SerialInputOutputManager$Listener) -> <init>
    94:95:void setListener(com.hoho.android.usbserial.util.SerialInputOutputManager$Listener) -> a
    98:98:com.hoho.android.usbserial.util.SerialInputOutputManager$Listener getListener() -> a
    102:105:void writeAsync(byte[]) -> a
    108:112:void stop() -> a
    115:115:com.hoho.android.usbserial.util.SerialInputOutputManager$State getState() -> a
    127:155:void run() -> run
    159:188:void step() -> b
    40:40:void <clinit>() -> <clinit>
com.hoho.android.usbserial.util.SerialInputOutputManager$Listener -> com.hoho.android.usbserial.util.SerialInputOutputManager$Listener:
    void onNewData(byte[]) -> onNewData
    void onRunError(java.lang.Exception) -> onRunError
com.hoho.android.usbserial.util.SerialInputOutputManager$State -> com.hoho.android.usbserial.util.SerialInputOutputManager$a:
    com.hoho.android.usbserial.util.SerialInputOutputManager$State STOPPED -> a
    com.hoho.android.usbserial.util.SerialInputOutputManager$State RUNNING -> b
    com.hoho.android.usbserial.util.SerialInputOutputManager$State STOPPING -> c
    com.hoho.android.usbserial.util.SerialInputOutputManager$State[] $VALUES -> a
    53:53:com.hoho.android.usbserial.util.SerialInputOutputManager$State[] values() -> a
    53:53:com.hoho.android.usbserial.util.SerialInputOutputManager$State valueOf(java.lang.String) -> a
    53:53:void <init>(java.lang.String,int) -> <init>
    53:56:void <clinit>() -> <clinit>
com.hoho.android.usbserial.util.StringUtil -> com.hoho.android.usbserial.util.b:
    10:10:void <init>() -> <init>
    12:19:boolean isEmpty(java.lang.String) -> a
    26:30:boolean isNumber(java.lang.String) -> b
    49:52:boolean isEqualsByte(byte[],int,byte[],int) -> a
    69:80:java.lang.String str2DateTime(java.lang.String,java.lang.String,java.lang.String) -> a
    91:98:byte[] shortToByteArray(short) -> a
    108:115:byte[] shortToByteArrayTwo(short) -> b
    125:132:byte[] shortArrayToByteArray(short[]) -> a
    142:150:short[] byteArraytoShort(byte[]) -> a
    162:174:java.lang.String str2HexStr(java.lang.String) -> a
    185:201:java.lang.String hexStr2Str(java.lang.String) -> b
    211:220:java.lang.String byte2HexStr(byte[]) -> a
    231:244:byte[] hexStr2Bytes(java.lang.String) -> a
    257:270:java.lang.String strToUnicode(java.lang.String) -> c
    281:295:java.lang.String unicodeToString(java.lang.String) -> d
    305:310:int byteToInt(byte[]) -> a
    320:324:byte[] intToByte(int) -> a
    328:332:byte[] intToByte1024(int) -> b
    337:347:java.lang.String byteTostrGBK(byte[]) -> b
    354:361:byte[] hexStringToByte(java.lang.String) -> b
    365:366:byte toByte(char) -> a
    376:384:java.lang.String bytesToHexString(byte[]) -> c
    387:392:byte[] intToByteArray(int) -> c
    401:403:int byteArrayToInt(byte[]) -> b
